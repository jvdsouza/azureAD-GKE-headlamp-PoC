name: spec-kit-poc
version: "3.9"

services:
  kind:
    build:
      context: .
      dockerfile: Dockerfile.kind
    container_name: kind-cluster
    privileged: true
    network_mode: "host"
    cap_add:
      - SYS_ADMIN
      - NET_ADMIN
    tmpfs:
      - /run
      - /tmp
    environment:
      - KUBECONFIG=/etc/kubernetes/admin.conf
    volumes:
      - ./k8s/kind-config.yaml:/kind-config.yaml
      - ./api-port.env:/api-port.env
      - /var/run/docker.sock:/var/run/docker.sock
      - /lib/modules:/lib/modules:ro
    command: >
      sh -c "
        echo '🧹 Cleaning up any existing Kind cluster...';
        kind delete cluster --name spec-kit || true;
        echo '🚀 Creating new Kind cluster...';
        kind create cluster --name spec-kit --config /kind-config.yaml --retain --wait 120s --verbosity 6;

        echo '⏳ Waiting for spec-kit-control-plane to be ready...';
        for i in $(seq 1 30); do
          if docker inspect spec-kit-control-plane >/dev/null 2>&1; then
            break;
          fi;
          echo '  💤 Waiting for Kind node... ($i/30)'; sleep 3;
        done;

        # Always use Kubernetes default port
        echo 'API_PORT=6443' > /api-port.env;
        echo '✅ Kind cluster ready on host port 6443';
        sleep infinity;
      "
    healthcheck:
      test: ["CMD", "kind", "get", "clusters"]
      interval: 25s
      timeout: 10s
      retries: 5

  dex:
    image: ghcr.io/dexidp/dex:v2.37.0
    container_name: dex
    network_mode: "bridge"
    ports:
      - "5556:5556"
    volumes:
      - ./dex/config.yaml:/etc/dex/config.yaml
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:5556/dex/.well-known/openid-configuration"]
      interval: 10s
      timeout: 5s
      retries: 5

  headlamp:
    image: ghcr.io/headlamp-k8s/headlamp:latest
    container_name: headlamp
    network_mode: "bridge"
    depends_on:
      kind:
        condition: service_healthy
      dex:
        condition: service_healthy
    environment:
      - OIDC_ENABLED=true
      - OIDC_CLIENT_ID=headlamp
      - OIDC_ISSUER_URL=http://dex:5556/dex
      - OIDC_REDIRECT_URI=http://headlamp:4466/callback
      - OIDC_SCOPES=openid,email,profile,offline_access
    ports:
      - "4566:4466"
    volumes:
      - ./api-port.env:/api-port.env
    command: >
      sh -c "
        export KUBERNETES_API_URL=https://host.docker.internal:6443;
        echo '🌐 Headlamp using ${KUBERNETES_API_URL}';
        ./headlamp;
      "

  backstage:
    image: headlamp-backstage:latest
    build:
      context: ./backstage-plugin
      dockerfile: Dockerfile
    container_name: backstage
    network_mode: "bridge"
    depends_on:
      headlamp:
        condition: service_started
    ports:
      - "7107:7007"
    environment:
      - NODE_ENV=development
    command: >
      sh -c "
        export KUBERNETES_API_URL=https://host.docker.internal:6443;
        echo '🌐 Backstage Headlamp backend starting with ${KUBERNETES_API_URL}';
        npm start;
      "

  spec-tests:
    build:
      context: ./tests
      dockerfile: Dockerfile
    container_name: spec-tests
    network_mode: "bridge"
    depends_on:
      kind:
        condition: service_healthy
    volumes:
      - ./api-port.env:/api-port.env
      - ./k8s:/workspace/k8s
      - /var/run/docker.sock:/var/run/docker.sock
    command: >
      sh -c "
        echo '✅ Cluster reachable, running pytest...';
        pytest tests/;
      "
